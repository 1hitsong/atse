import "pkg:/source/utilities/utilities.bs"

sub init()
    ' deleteUserStations()
    getData()
end sub

sub getData()
    ' userRadioStations = getUserStations()
    ' if isValid(userRadioStations)
    '     setRadioContent(userRadioStations)
    '     return
    ' end if

    m.getRadiosTask = createObject("roSGNode", "GetRadios")
    m.getRadiosTask.observeField("responseBody", "onResponseBodyLoaded")

    m.getRadiosTask.limit = 50
    m.getRadiosTask.offset = 0
    m.getRadiosTask.control = "RUN"
end sub

sub onResponseBodyLoaded()
    m.getRadiosTask.unobserveField("responseBody")
    if not isValid(m.getRadiosTask.responseBody) then return

    userRadioStations = m.getRadiosTask.responseBody

    setUserStations(userRadioStations)

    setRadioContent(userRadioStations)
end sub

sub setRadioContent(dataSource as object)

    data = CreateObject("roSGNode", "ContentNode")

    for each radio in dataSource

        ' For now, ignore problamatic default radio stations
        if LCase(type(radio.id)) = "roint" or LCase(type(radio.id)) = "integer"
            if radio.id = 1 then continue for
            if radio.id > 13 then continue for
        end if

        gridAlbum = CreateObject("roSGNode", "ContentNode")

        gridAlbum.id = radio.name
        gridAlbum.shortdescriptionline1 = radio.dispname
        gridAlbum.HDGRIDPOSTERURL = radio.image
        gridAlbum.hdposterurl = radio.image
        gridAlbum.SDGRIDPOSTERURL = radio.image
        gridAlbum.sdposterurl = radio.image

        data.appendChild(gridAlbum)
    end for

    m.top.content = data
end sub

function getUserStations() as dynamic
    registrySection = CreateObject("roRegistrySection", "Stations")
    if registrySection.Exists("UserStations")
        return ParseJson(registrySection.Read("UserStations"))
    end if
    return invalid
end function

sub setUserStations(userStations as object)
    registrySection = CreateObject("roRegistrySection", "Stations")
    registrySection.Write("UserStations", FormatJson(userStations))
    registrySection.Flush()
end sub

sub deleteUserStations()
    registrySection = CreateObject("roRegistrySection", "Stations")
    registrySection.Delete("UserStations")
    registrySection.Flush()
end sub

function onKeyEvent(key as string, press as boolean) as boolean
    if not press then return false

    if key = "OK"
        m.top.selectedRadio = m.top.content.getChild(m.top.itemFocused).id
        return true
    end if

    return false
end function
